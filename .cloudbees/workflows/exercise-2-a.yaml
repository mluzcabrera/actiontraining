apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: Exercise 2 A
on:
  workflow_dispatch:
    inputs:
      pathtobinary:
        type: string
        default: example.txt
        required: true
      artifactversion:
        type: string
        default: 1.0.0
        required: true
jobs:
  build:
    steps:
      - name: Print vars
        id: step1
        uses: docker://curlimages/curl:latest
        shell: sh
        run: |
          echo  ${{vars.nexus_training_actions_user}} - ${{vars.nexus_training_actions_repo}}
      - name: Create file
        id: step3
        uses: docker://curlimages/curl:latest
        shell: sh
        run: echo "This is an example file - $(date)" > ${{inputs.pathtobinary}}
      - name: Upload to Nexus
        id: step4
        uses: docker://curlimages/curl:latest
        shell: sh
        run: |
          curl -v -u ${{vars.nexus_training_actions_user}}:${{secrets.nexus_training_actions_secret}} --upload-file ${{inputs.pathtobinary}} ${{vars.nexus_training_actions_repo}}
      - name: List artifacts in repo
        id: step5
        uses: docker://curlimages/curl:latest
        shell: sh
        run: |
          curl -s -u ${{vars.nexus_training_actions_user}}:${{secrets.nexus_training_actions_secret}} \
             "https://nexus.cloudbees.guru:8081/service/rest/v1/search?repository=unify-docker-training" \
      - name: Get artifact digest
        id: step6
        uses: docker://ganeshpl/alpine-jq
        shell: sh
        run: |
          echo -n "$(curl -s -u '${{vars.nexus_training_actions_user}}:${{secrets.nexus_training_actions_secret}}' 'https://nexus.cloudbees.guru:8081/service/rest/v1/assets?repository=unify-docker-training' | jq -r '.items[] | select(.path == "${{inputs.pathtobinary}}") | .checksum.md5' )" > "$CLOUDBEES_OUTPUTS/digest"
      - name: Register built artifact
        id: step7
        uses: cloudbees-io/register-build-artifact@v1
        with:
          version: ${{inputs.artifactversion}}
          url: ${{vars.nexus_training_actions_repo}}${{inputs.pathtobinary}}
          digest: ${{steps.step6.outputs.digest}}
          name: ${{inputs.pathtobinary}}
